spring:
    liquibase:
        enabled: false

    datasource:
        url: jdbc:mysql://localhost:3306/javabasemysql?useSSL=false
        username: root
        password: root

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: 823737455730-2gtbu7gg4htkcbr4qvttgdu18vc9gvu0.apps.googleusercontent.com
              clientSecret: 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
              redirectUri: "{baseUrl}/oauth2/my-social-callback/{registrationId}"
              #redirectUri: "http://localhost:8080/login/oauth2/code/google"
              scope:
                - email
                - profile
            facebook:
              clientId: 1564542737415448
              clientSecret: bebd87a7af598a8022cda7a80687ed98
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
            github:
              clientId: aa0f891b5c373dde4296
              clientSecret: 4a4c957bc9dffa1740bd835a0ce05c023167ec7d
              redirectUri: "{baseUrl}/oauth2/my-social-callback/{registrationId}"
              scope:
                - user:email
                - read:user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:3000,http://localhost:8080
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - https://www.google.com
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect